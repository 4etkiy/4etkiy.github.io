{"version":3,"sources":["components/MovieCard/MovieCard.module.css","pages/MoviePage/MoviePage.module.css","api/api.js","redux/genres/genres-actions.js","components/Image/Image.js","components/MovieCard/MovieCard.js","pages/MovieListPage/MovieListPage.js","redux/movies/movies-actions.js","pages/MoviePage/MoviePage.js","redux/movie/movie-actions.js","redux/recommendation/recommendation-actions.js","App.js","redux/movies/movies-reducer.js","redux/movie/movie-reducer.js","redux/recommendation/recommendation-reducer.js","redux/genres/genres-reducer.js","redux/redux-store.js","index.js","pages/MovieListPage/MovieListPage.module.css"],"names":["module","exports","API_KEY","instance","axios","baseURL","moviesAPI","query","page","params","api_key","get","id","getGenres","dispatch","then","response","genres","data","forEach","genre","name","type","payload","Image","props","url","className","src","alt","MovieCard","movie","s","card","to","poster_path","image","desc","title","infoTitle","release_date","join","overview","mapDispatchToProps","getMovies","getState","moviesWithGenres","results","map","genre_ids","genreId","result","movies","setMovies","MoviesPage","state","onChange","e","setState","target","value","onSearch","onShowMore","onUp","render","pageContainer","search","searchContainer","searchInput","placeholder","onClick","list","this","React","Component","connect","getMovie","getRecommendations","MoviePage","prevProps","oldData","newId","match","movieId","window","scrollTo","containerMoviePage","info","release","popularity","original_title","original_language","backdrop_path","recommendation","App","exact","path","component","MovieListPage","initialState","moviesReducer","action","recommendationReducer","genresReducer","reducers","combineReducers","movieReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.07fab176.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__3B7zx\",\"infoTitle\":\"MovieCard_infoTitle__1cfGT\",\"title\":\"MovieCard_title__2wPmP\",\"image\":\"MovieCard_image__1ELK6\",\"desc\":\"MovieCard_desc__MErqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerMoviePage\":\"MoviePage_containerMoviePage__2RYUZ\",\"movie\":\"MoviePage_movie__1PNhV\",\"info\":\"MoviePage_info__3QXbd\",\"title\":\"MoviePage_title__2JAcH\",\"image\":\"MoviePage_image__1h4Pk\",\"overview\":\"MoviePage_overview__EAIrS\"};","import * as axios from \"axios\";\r\n\r\nconst API_KEY = \"6642a4dd205dd56e6d10c72356a854de\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n})\r\n\r\nexport const moviesAPI = {\r\n    getMovies(query, page) {\r\n        const params = {\r\n            api_key: API_KEY,\r\n            query: query,\r\n            page: page,\r\n        };\r\n\r\n        return instance.get('search/movie', { params })\r\n    },\r\n    getMovie(id) {\r\n        const params = {\r\n            api_key: API_KEY,\r\n        };\r\n\r\n        return instance.get(`movie/${id}`, { params })\r\n    },\r\n    getRecommendations(id) {\r\n        const params = {\r\n            api_key: API_KEY,\r\n        };\r\n        return instance.get(`movie/${id}/recommendations`, { params })\r\n    },\r\n    getGenres() {\r\n        const params = {\r\n            api_key: API_KEY,\r\n        };\r\n\r\n        return instance.get(`genre/movie/list`, { params })\r\n    }\r\n}","import { moviesAPI } from \"../../api/api\";\r\nexport const SET_GENRES = \"SET_GENRES\";\r\n\r\nexport const setGenres = (movie) => ({ type: SET_GENRES, payload: movie });\r\n\r\nexport const getGenres = (query) => (dispatch) => {\r\n    moviesAPI.getGenres(query)\r\n        .then(response => {\r\n            const genres = {};\r\n\r\n            response.data.genres.forEach(genre => {\r\n                genres[genre.id] = genre.name;\r\n            })\r\n\r\n            dispatch(setGenres(genres));\r\n        });\r\n}","import React from \"react\";\r\n\r\nconst BASE_URL = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst Image = (props) => {\r\n    const { url, className } = props;\r\n\r\n    return (\r\n        <img src={`${BASE_URL}${url}`} className={className} alt=\"\" />\r\n    )\r\n}\r\nexport default Image;","import React from \"react\";\r\nimport s from \"./MovieCard.module.css\";\r\nimport Image from \"../Image/Image\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst MovieCard = (props) => {\r\n    const { movie } = props;\r\n\r\n\r\n    return (\r\n        <Link className={s.card} to={`/movie/${movie.id}`}>\r\n            <Image url={movie.poster_path} className={s.image} />\r\n            <div className={s.desc}>\r\n                <h1 className={s.title}>\r\n                    {movie.title}\r\n                </h1>\r\n                <p>\r\n                    <span className={s.infoTitle}>Дата выхода: </span>\r\n                    {movie.release_date}\r\n                </p>\r\n                <p>\r\n                    {movie.genres && movie.genres.join(', ')}\r\n                </p>\r\n                <p>\r\n                    {movie.overview}\r\n                </p>\r\n            </div>\r\n        </Link>);\r\n}\r\nexport default MovieCard;\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovies } from \"../../redux/movies/movies-actions\";\r\nimport { getGenres } from \"../../redux/genres/genres-actions\";\r\nimport MovieCard from \"../../components/MovieCard/MovieCard\";\r\nimport s from \"./MovieListPage.module.css\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    movies: state.movies.results,\r\n    page: state.movies.page,\r\n    genres: state.genres,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getMovies,\r\n    getGenres,\r\n};\r\n\r\nclass MoviesPage extends React.Component {\r\n    state = {\r\n        query: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getGenres();\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            query: e.target.value,\r\n        });\r\n    };\r\n\r\n    onSearch = () => {\r\n        this.props.getMovies(this.state.query);\r\n    };\r\n    onShowMore = () => {\r\n        this.props.getMovies(this.state.query, this.props.page + 1);\r\n    };\r\n    onUp = () => {\r\n        this.props.getMovies(this.state.query);\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={s.pageContainer}>\r\n                <div className={s.search}>\r\n                    <div className={s.searchContainer}>\r\n                        <input className={s.searchInput}\r\n                            placeholder={\"Search\"}\r\n                            onChange={this.onChange}\r\n                            value={this.state.query}\r\n                        ></input>\r\n                        <button className={s.onSearch} onClick={this.onSearch}>Search</button>\r\n                    </div>\r\n                    <button className={s.onShowMore} onClick={this.onShowMore}>Show more</button>\r\n                    <button className={s.onUp} onClick={this.onUp}>Up</button>\r\n                </div>\r\n\r\n                <div className={s.list}>\r\n                    {this.props.movies.map((movie) => (\r\n                        <MovieCard movie={movie} />\r\n                    ))}\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesPage);\r\n","import { moviesAPI } from \"../../api/api\";\r\nexport const SET_MOVIES = \"SET_MOVIES\";\r\nexport const ADD_MOVIES = \"ADD_MOVIES\";\r\n\r\nexport const setMovies = (movies) => ({ type: SET_MOVIES, payload: movies });\r\nexport const addMovies = (movies) => ({ type: ADD_MOVIES, payload: movies });\r\n\r\nexport const getMovies = (query, page) => (dispatch, getState) => {\r\n    moviesAPI.getMovies(query, page)\r\n        .then(response => {\r\n            const genres = getState().genres;\r\n            const moviesWithGenres = response.data.results.map(movie => {\r\n                return {\r\n                    ...movie,\r\n                    genres: movie.genre_ids.map(genreId => genres[genreId]),\r\n                }\r\n            });\r\n\r\n            const result = { ...response.data, results: moviesWithGenres };\r\n\r\n            if (page) dispatch(addMovies(result));\r\n            else dispatch(setMovies(result));\r\n        })\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovie } from \"../../redux/movie/movie-actions\";\r\nimport { getRecommendations } from \"../../redux/recommendation/recommendation-actions\";\r\nimport { getGenres } from \"../../redux/genres/genres-actions\";\r\nimport s from \"./MoviePage.module.css\"\r\nimport Image from \"../../components/Image/Image\"\r\nimport MovieCard from \"../../components/MovieCard/MovieCard\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    movie: state.movie,\r\n    recommendation: state.recommendation,\r\n    genres: state.genres\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getMovie,\r\n    getRecommendations,\r\n    getGenres,\r\n};\r\n\r\nclass MoviePage extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getGenres();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const oldData = this.props.movie;\r\n        const newId = this.props.match.params.movieId;\r\n        const oldId = prevProps.match.params.movieId;\r\n\r\n        if (newId !== oldId || (!oldData && this.props.genres)) {\r\n            this.props.getMovie(newId);\r\n            this.props.getRecommendations(newId);\r\n            window.scrollTo(0, 0);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const genres = this.props.movie && this.props.movie.genres.map(genre => genre.name);\r\n\r\n        if (this.props.movie) {\r\n            return (\r\n                <div className={s.containerMoviePage}>\r\n                    <div className={s.movie}>\r\n                        <Image url={this.props.movie.poster_path} className={s.image} />\r\n                        <div className={s.info}>\r\n                            <h1 className={s.title}>{this.props.movie.title}</h1>\r\n                            <div className={s.release}>Год Выпуска {this.props.movie.release_date}</div>\r\n                            <div className={s.popularity}>Популярность {this.props.movie.popularity}</div>\r\n\r\n                            <div className={s.original_title}>Оригинальное название {this.props.movie.original_title}</div>\r\n                            <div className={s.original_language}>Оригинальный язык {this.props.movie.original_language}</div>\r\n                            <p>\r\n                                {genres.join(', ')}\r\n                            </p>\r\n                        </div>\r\n                        <Image url={this.props.movie.backdrop_path} className={s.image} />\r\n                        <p className={s.overview}>{this.props.movie.overview}</p>\r\n                        {/* <div className={s.video}>Видео {this.props.movie.video}</div> */}\r\n                    </div >\r\n                    <div className={s.list}>\r\n                        {this.props.recommendation.map((movie) => (\r\n                            <MovieCard movie={movie} />\r\n                        ))}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePage);\r\n\r\n","import { moviesAPI } from \"../../api/api\";\r\nexport const SET_MOVIE = \"SET_MOVIE\";\r\n\r\nexport const setMovie = (movie) => ({ type: SET_MOVIE, payload: movie });\r\n\r\nexport const getMovie = (query) => (dispatch, getState) => {\r\n    moviesAPI.getMovie(query)\r\n        .then(response => {\r\n            dispatch(setMovie(response.data));\r\n        });\r\n}\r\n","import { moviesAPI } from \"../../api/api\";\r\nexport const SET_RECOMMENDATION = \"SET_RECOMMENDATION\";\r\n\r\nexport const setRecommendation = (movies) => ({ type: SET_RECOMMENDATION, payload: movies });\r\n\r\nexport const getRecommendations = (id) => (dispatch, getState) => {\r\n    moviesAPI.getRecommendations(id)\r\n        .then(response => {\r\n            const genres = getState().genres;\r\n            const moviesWithGenres = response.data.results.map(movie => {\r\n                return {\r\n                    ...movie,\r\n                    genres: movie.genre_ids.map(genreId => genres[genreId]),\r\n                }\r\n            });\r\n            dispatch(setRecommendation(moviesWithGenres));\r\n        });\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport MovieListPage from './pages/MovieListPage/MovieListPage';\nimport MoviePage from './pages/MoviePage/MoviePage';\nimport { Route } from 'react-router-dom';\n\nconst App = (props) => {\n  return (\n    <div>\n      <Route exact path='/' component={MovieListPage} />\n\n      <Route path='/movie/:movieId' component={MoviePage} />\n    </div>\n  )\n}\n\nexport default App;","import { SET_MOVIES, ADD_MOVIES } from \"./movies-actions\";\r\nconst initialState = {\r\n    page: 1,\r\n    results: []\r\n};\r\n\r\nconst moviesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_MOVIES:\r\n            return action.payload;\r\n        case ADD_MOVIES:\r\n            return {\r\n                page: action.payload.page,\r\n                results: [\r\n                    ...state.results,\r\n                    ...action.payload.results,\r\n                ]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moviesReducer;","import { SET_MOVIE } from \"./movie-actions\";\r\n\r\nconst initialState = null;\r\n\r\nconst moviesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_MOVIE:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moviesReducer;","import { SET_RECOMMENDATION } from \"./recommendation-actions\";\r\nconst initialState = [];\r\n\r\nconst recommendationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_RECOMMENDATION:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default recommendationReducer;","import { SET_GENRES } from \"./genres-actions\";\r\n\r\nconst initialState = [];\r\n\r\nconst genresReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_GENRES:\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default genresReducer;","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport moviesReducer from \"./movies/movies-reducer\";\r\nimport movieReducer from \"./movie/movie-reducer\";\r\nimport recommendationReducer from \"./recommendation/recommendation-reducer\";\r\nimport genresReducer from \"./genres/genres-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    movies: moviesReducer,\r\n    movie: movieReducer,\r\n    recommendation: recommendationReducer,\r\n    genres: genresReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n// window.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"MovieListPage_pageContainer__1Cx3S\",\"search\":\"MovieListPage_search__2ZXon\",\"searchContainer\":\"MovieListPage_searchContainer__3-5gQ\",\"searchInput\":\"MovieListPage_searchInput__2u4Q2\",\"onSearch\":\"MovieListPage_onSearch__1mdlB\",\"onShowMore\":\"MovieListPage_onShowMore__3Vh34\",\"onUp\":\"MovieListPage_onUp__2GM7J\",\"list\":\"MovieListPage_list__1pR2W\",\"genres\":\"MovieListPage_genres__1x_9u\"};"],"sourceRoot":""}